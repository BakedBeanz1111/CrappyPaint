package src.controller;

//An Adapter Pattern says that just "converts the interface of a class into another interface that a client wants".
// (Taken from https://www.javatpoint.com/adapter-pattern)

import view.gui.PaintCanvas;

import javax.swing.*;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

public class MouseAdapter extends JPanel implements MouseListener {

    private view.gui.PaintCanvas paintCanvas;

    public MouseAdapter() {
        paintCanvas =new PaintCanvas();
        paintCanvas.addMouseListener(this); //I'm not sure what this "I:" is before this. It pops up when I use the auto-complete
    }

    //Output string for whenever the mouse does something
    private void actionLog(String action, MouseEvent e) {
        System.out.println(action);
    }

    //The following stub functions were generated by IntelliJ
    //What is the difference between Mouse Clicked vs Mouse Pressed + Mouse Released?
    @Override
    public void mouseClicked(MouseEvent e) {
        actionLog("Mouse button Clicked", e);
    }

    @Override
    public void mousePressed(MouseEvent e) {
        actionLog("Mouse Pressed", e);
    }

    @Override
    public void mouseReleased(MouseEvent e) {
        actionLog("Mouse Clicked", e);
    }

    @Override
    public void mouseEntered(MouseEvent e) {
        actionLog("Mouse entered drawing area", e);
    }

    @Override
    public void mouseExited(MouseEvent e) {
        actionLog("Mouse exited drawing area", e);
    }
}
